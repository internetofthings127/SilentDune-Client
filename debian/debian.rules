#!/usr/bin/make -f
DH_VERBOSE = 1
export LC_ALL=C.UTF-8
#export PYBUILD_NAME=silentdune
export PYBUILD_TEST_PYTEST = 1

DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/default.mk

%:
	dh $@ --with python2,python3 --buildsystem=pybuild --with=systemd
	

# http://stackoverflow.com/questions/7459644/why-is-dh-usrlocal-throwing-a-build-error
override_dh_usrlocal:

#override_dh_installinit:
#
#	if [[ `systemctl` =~ -\.mount ]]; then dh_systemd_enable; fi
#	dh_installinit
#	if [[ `systemctl` =~ -\.mount ]]; then dh_systemd_start; fi
#
#	USE_SYSTEMD=false
#	#OS=$(shell lsb_release -si)
#	#ARCH=$(shell uname -m | sed 's/x86_//;s/i[3-6]86/32/')
#	#VER=$(shell lsb_release -sr)
#
#	OS=$(shell uname -s)
#	ARCH=$(shell uname -m)
#	VER=$(shell uname -r)	
#
#	echo $OS
#	echo $VER
#
#	#if [ "$OS" = "Ubuntu" ] && [ "$VER" = "16.04" ]; then
#	#	USE_SYSTEMD=true
#	#fi
#
#	#if [ "$USE_SYSTEMD" = true ]; then
#	#	dh_systemd_enable
#	#fi
#	
#	dh_systemd_enable
#	dh_installinit
#	dh_systemd_start
#
#	#if [ "$USE_SYSTEMD" = true ]; then
#	#	dh_systemd_start
#	#fi

# Disable building of documentation (see README.source)
#override_dh_auto_build:
#	dh_auto_build
#	$(MAKE) -C documentation_builder html
#
#override_dh_installdocs:
#	dh_installdocs -Xexample
#
#override_dh_install:
#	dh_install -X update_pickles.py --package=python-cobra-data
#	dh_install --remaining-packages
#
#override_dh_auto_clean:
#	dh_auto_clean
#	rm -f cobra/solvers/cglpk.c
